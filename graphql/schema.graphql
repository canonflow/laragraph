scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")
scalar Date @scalar(class: "MLL\\GraphQLScalars\\Date")
scalar Email @scalar(class: "MLL\\GraphQLScalars\\Email")

type Query {
    user(
      id: ID @eq @rules(apply: ["prohibits:email", "required_without:email"])
      email: Email @eq @rules(apply: ["prohibits:id", "required_without:id", "email"])
    ): User @find

    users(
      name: String @where(operator: "like")
    ): [User!]! @paginate(defaultCount: 10)

    event(
        id: ID @eq
    ): Event @find

    events(
        name: String @where(operator: "like") @rules(apply: ["prohibits:city", "required_without:city"])
        city: String @where(operator: "like")@rules(apply: ["prohibits:name", "required_without:name"])
    ): [Event!]! @paginate(defaultCount: 10)

    speaker(
        id: ID @eq
    ): Speaker @find

    speakers(
        name: String @where(operator: "like")
    ): [Speaker!]! @paginate(defaultCount: 10)
}

type User {
    id: ID!
    name: String!
    email: Email!
    email_verified_at: DateTime
    created_at: DateTime!
    updated_at: DateTime!
}

type Event {
    id: ID!
    speakers: [Speaker!] @hasMany
    name: String!
    city: String!
    venue: String!
    date: Date!
    online: Boolean!
    created_at: DateTime!
    updated_at: DateTime!
}

type Speaker {
    id: ID!
    event: Event @belongsTo
    name: String!
    email: String!
    bio: String!
    photo: String
    twitter: String
    city: String!
    country: String!
    created_at: DateTime!
    updated_at: DateTime!
}
